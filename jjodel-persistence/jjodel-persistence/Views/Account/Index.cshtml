@{
    ViewBag.Title = "Users";
}

<div class="row">
    <div class=" d-grid gap-2 d-flex justify-content-end">
        <button class="btn btn-danger deleteUserBtn" onclick="AddUser()" title="Add User">
            <i class="bi bi-plus"></i>
        </button>
    </div>
    
</div>
<div class="row" id="user-container">

</div>

 
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modal-body">
                
            </div>
        </div>
    </div>
</div>

 <script>    

        document.addEventListener("DOMContentLoaded", function () {
            List();    
        });

        function AddUser(){
            fetch(`/Account/Add`)
                .then(response => response.text())
                .then(data => {
                    document.getElementById("modal-body").innerHTML = data;
                    document.getElementById("editUserModalLabel").innerText = "Add User";
                    OpenModal("editUserModal");
                })
                .catch(error => OpenErrorModal(error) );
        }

        function EditUser(id) {
            fetch(`/Account/Edit/${id}`)
                .then(response => response.text()) 
                .then(data => {
                    document.getElementById("modal-body").innerHTML = data;
                    document.getElementById("editUserModalLabel").innerText = "Edit User";
                    OpenModal("editUserModal");
                    
                })
                .catch(error => OpenErrorModal(error) );
        }

    function DeleteUser(id){
         fetch(`/Account/Delete/${id}`)
                .then(response => response.text())
                .then(data => {
                    var jsonData = JSON.parse(data)
                    if(jsonData.success){
                        OpenSuccessModal(jsonData.message, null);
                        List();
                    }
                    else{
                        OpenErrorModal(jsonData.message)
                    }
                })
                .catch(error => OpenErrorModal(error) );
    }

    function DeleteUserConfirm(id){
        OpenConfirmModal(id, "Are you sure you want to delete this user? This action cannot be undone.", "DeleteUser('"+id+"')");
    }

    function EnableUser(id){
        fetch(`/Account/EnableUser/${id}`)
                .then(response => response.text())
                .then(data => {
                    var jsonData = JSON.parse(data)
                    if(jsonData.success){
                        OpenSuccessModal(jsonData.message, null);
                        List();
                    }
                    else{
                        OpenErrorModal(jsonData.message)
                    }
                })
                .catch(error => OpenErrorModal(error) );
    }

    function EnableUserConfirm(id){
        OpenConfirmModal(id, "Are you sure you want to enable this user? This action cannot be undone.", "EnableUser('"+id+"')");

    }

    function List(){
       
        fetch('/Account/List')
                .then(response => response.text())
                .then(data => {
                    document.getElementById("user-container").innerHTML = data;
                    let table = new DataTable("#example", {

            layout: {
                top1Start: {
                    buttons: [
                        {
                            extend: "copy",
                            text: '<i class="bi bi-clipboard"></i> Copy',
                            className: "btn btn-secondary"
                        },
                        {
                            extend: "csv",
                            text: '<i class="bi bi-file-earmark-spreadsheet"></i> CSV',
                            className: "btn btn-success"
                        },
                        {
                            extend: "excel",
                            text: '<i class="bi bi-file-earmark-excel"></i> Excel',
                            className: "btn btn-success"
                        },
                        {
                            extend: "pdf",
                            text: '<i class="bi bi-file-earmark-pdf"></i> PDF',
                            className: "btn btn-danger"
                        },
                        {
                            extend: "print",
                            text: '<i class="bi bi-printer"></i> Print',
                            className: "btn btn-primary"
                        }
                    ]
                }
            }
        });
                })
                .catch(error => OpenErrorModal(error) );
    }

    function ResetPasswordConfirm(id){
        OpenConfirmModal(id, "Are you sure you want to reset the password for this user? This action cannot be undone.", "ResetPassword('"+id+"')");

    }

    function ResetPassword(id){
        fetch(`/Account/ResetPasswordByAdmin/${id}`)
                .then(response => response.text())
                .then(data => {
                    var jsonData = JSON.parse(data)
                    if(jsonData.success){
                        OpenSuccessModal(jsonData.message, null);
                        List();
                    }
                    else{
                        OpenErrorModal(jsonData.message)
                    }
                })
                .catch(error => OpenErrorModal(error) );
    }

    function SaveUser() {
            let form = document.getElementById("editUserForm");
            let formData = new FormData(form);
           
            fetch("/Account/Save", {
                method: "POST",
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {   
                   CloseModal()
                   OpenSuccessModal(data.message, null); 
                   List();
                }
               
                else {
                    SetFormErrors(data.errors);
                }
            })
            .catch(error => OpenErrorModal(error) );
        }
    </script>
